"""empty message

Revision ID: 8f9278cbcc3b
Revises: 
Create Date: 2018-11-05 03:40:40.643774

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8f9278cbcc3b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('PROHIBITIONTYPE',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('RESTRICTION',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('STATUSTYPE',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('URL',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('urlpath', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('urlpath')
    )
    op.create_table('IMAGERESTRICTION',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('restriction_id', sa.Integer(), nullable=True),
    sa.Column('image_rule', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['restriction_id'], ['RESTRICTION.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('MACHINELEARNINGR',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('restriction_id', sa.Integer(), nullable=True),
    sa.Column('model_path', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['restriction_id'], ['RESTRICTION.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('REGEXRESTRICTION',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('restriction_id', sa.Integer(), nullable=True),
    sa.Column('regex_rule', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['restriction_id'], ['RESTRICTION.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('URLPROCESSMENT',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['status_id'], ['STATUSTYPE.id'], ),
    sa.ForeignKeyConstraint(['url_id'], ['URL.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('URLPROHIBITION',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url_id', sa.Integer(), nullable=True),
    sa.Column('prohibition_id', sa.Integer(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['prohibition_id'], ['PROHIBITIONTYPE.id'], ),
    sa.ForeignKeyConstraint(['url_id'], ['URL.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('REASONSPROHIBITION',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url_processment_id', sa.Integer(), nullable=True),
    sa.Column('restriction_id', sa.Integer(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('url_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['restriction_id'], ['RESTRICTION.id'], ),
    sa.ForeignKeyConstraint(['url_id'], ['URL.id'], ),
    sa.ForeignKeyConstraint(['url_processment_id'], ['URLPROCESSMENT.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('REASONSPROHIBITION')
    op.drop_table('URLPROHIBITION')
    op.drop_table('URLPROCESSMENT')
    op.drop_table('REGEXRESTRICTION')
    op.drop_table('MACHINELEARNINGR')
    op.drop_table('IMAGERESTRICTION')
    op.drop_table('URL')
    op.drop_table('STATUSTYPE')
    op.drop_table('RESTRICTION')
    op.drop_table('PROHIBITIONTYPE')
    # ### end Alembic commands ###
